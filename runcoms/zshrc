#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Fuck XOFF
stty ixany
stty ixoff -ixon
stty stop undef
stty start undef

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zsh/prezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zsh/prezto/init.zsh"
fi

unset GREP_OPTIONS

# Customize to your needs...
autoload -Uz promptinit
promptinit
prompt agnoster
source ~/.zprofile
source $HOME/.aliases
export PANEL_FIFO="/tmp/panel-fifo"
export GOPATH="$HOME/go"
export CHROOT="$HOME/chroot"
export NVIM_TUI_ENABLE_TRUE_COLOR=1
export DEFAULT_VPN="DK"
export NVIM_LISTEN_ADDRESS="/tmp/nvimsocket"

setopt no_hist_verify
setopt HIST_IGNORE_DUPS
set ZLE_RPROPT_INDENT=1

eval "$(fasd --init zsh-hook zsh-ccomp auto)"

setopt no_hist_verify
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
     rm -rf "${SSH_ENV}"
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
     echo succeeded
     chmod 600 "${SSH_ENV}"
     . "${SSH_ENV}" > /dev/null
     /usr/bin/ssh-add -K ~/.ssh/git
     /usr/bin/ssh-add -K ~/.ssh/id-rsa;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     #ps ${SSH_AGENT_PID} doesn't work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
         start_agent;
     }
else
     start_agent;
fi

vim_ins_mode="INSERT"
vim_cmd_mode="NORMAL"
vim_mode=$vim_ins_mode

function zle-keymap-select {
  vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
      zle reset-prompt

}
zle -N zle-keymap-select

function zle-line-finish {
  vim_mode=$vim_ins_mode

}
zle -N zle-line-finish

function TRAPINT() {
  vim_mode=$vim_ins_mode
    return $(( 128 + $1  ))

}

for i in agnoster.zsh k.sh ; do
    [ -e $HOME/.zsh/$i ] && . $HOME/.zsh/$i
done

[ -e /bin/launchctl ] && /bin/launchctl setenv LIBRARY_PATH /usr/local/lib && /bin/launchctl setenv CPATH /usr/local/include && export LIBRARY_PATH=/usr/local/lib && export CPATH=/usr/local/include

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

[ -e ~/.cargo/env ] && . ~/.cargo/env
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/build
export VIRTUALENVWRAPPER_PYTHON=$(which python3)
source /usr/local/bin/virtualenvwrapper.sh
eval "$(pyenv init -)"
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

PATH="/Users/ellis/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/ellis/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/ellis/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/ellis/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/ellis/perl5"; export PERL_MM_OPT;

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
