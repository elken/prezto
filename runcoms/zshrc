#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Fuck XOFF
stty ixany
stty ixoff -ixon
stty stop undef
stty start undef

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zsh/prezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zsh/prezto/init.zsh"
fi

unset GREP_OPTIONS

# Customize to your needs...
source ~/.zprofile
source $HOME/.aliases
export PATH=/usr/lib/colorgcc/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:$HOME/bin:$HOME/.opam/system/bin:$HOME/.local/bin:$HOME/.cask/bin:/usr/local/heroku/bin:/usr/bin/core_perl/:$HOME/.gem/ruby/2.2.0/bin
export PANEL_FIFO="/tmp/panel-fifo"
export GOPATH="$HOME/go"
export CHROOT=$HOME/chroot

setopt no_hist_verify
setopt HIST_IGNORE_DUPS
source /usr/share/doc/pkgfile/command-not-found.zsh
set ZLE_RPROPT_INDENT=1

eval "$(fasd --init zsh-hook zsh-ccomp auto)"


eval `dircolors ~/.dircolors`

setopt no_hist_verify
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
     rm -rf "${SSH_ENV}"
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
     echo succeeded
     chmod 600 "${SSH_ENV}"
     . "${SSH_ENV}" > /dev/null
     /usr/bin/ssh-add ~/.ssh/git
     /usr/bin/ssh-add ~/.ssh/id-rsa;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     #ps ${SSH_AGENT_PID} doesn't work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
         start_agent;
     }
else     
     start_agent;
fi

vim_ins_mode="INSERT"
vim_cmd_mode="NORMAL"
vim_mode=$vim_ins_mode

function zle-keymap-select {
  vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
      zle reset-prompt

}
zle -N zle-keymap-select

function zle-line-finish {
  vim_mode=$vim_ins_mode

}
zle -N zle-line-finish

function TRAPINT() {
  vim_mode=$vim_ins_mode
    return $(( 128 + $1  ))

}

[ -e $HOME/.zsh/k.sh ] && . ~/.zsh/k.sh
[ -e $HOME/.zsh/notifyosd.zsh ] && . $HOME/.zsh/notifyosd.zsh
